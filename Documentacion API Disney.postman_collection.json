{
	"info": {
		"_postman_id": "3b48915d-f511-4d9e-81a8-946080f4c203",
		"name": "Documentacion API Disney",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Path: \"/characters\"",
			"item": [
				{
					"name": "GET Personajes por pelicula",
					"request": {
						"method": "GET",
						"header": [],
						"url": null,
						"description": "Retorna todos los personajes que hayan participado en la pel√≠cula especificada como query param. Es un valor entero, id de la pelicula."
					},
					"response": [
						{
							"name": "Success - Busqueda por pelicula",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTYyNDQ5NDk0MiwiZXhwIjoxNjI0NDk1NTQyfQ.n-gwaALlw-1iNR3GuMCVP1jx8GdYBKJJVOcpJZYlaJU",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:8080/characters?movies=2",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"characters"
									],
									"query": [
										{
											"key": "movies",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Jun 2021 00:40:49 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 3,\n        \"nombre\": \"Kim Ki-taek\",\n        \"edad\": 50,\n        \"peso\": 80,\n        \"historia\": \"Desempleado\",\n        \"imagen\": \"url\"\n    },\n    {\n        \"id\": 4,\n        \"nombre\": \"Ki-Jung\",\n        \"edad\": 18,\n        \"peso\": 60,\n        \"historia\": \"Estudiante\",\n        \"imagen\": \"url\"\n    }\n]"
						}
					]
				},
				{
					"name": "GET Personajes por peso",
					"request": {
						"method": "GET",
						"header": [],
						"url": null,
						"description": "Retorna todos los personajes por peso, cantidad especificada como query param."
					},
					"response": [
						{
							"name": "Success - Busqueda por peso",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTYyNDQ5NDk0MiwiZXhwIjoxNjI0NDk1NTQyfQ.n-gwaALlw-1iNR3GuMCVP1jx8GdYBKJJVOcpJZYlaJU",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:8080/characters?weight=80",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"characters"
									],
									"query": [
										{
											"key": "weight",
											"value": "80"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Jun 2021 00:38:31 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 3,\n        \"nombre\": \"Kim Ki-taek\",\n        \"edad\": 50,\n        \"peso\": 80,\n        \"historia\": \"Desempleado\",\n        \"imagen\": \"url\"\n    }\n]"
						}
					]
				},
				{
					"name": "GET Personajes por edad",
					"request": {
						"method": "GET",
						"header": [],
						"url": null,
						"description": "Busca todos los personajes que contengan la edad especificada, es un query param.\nSi se ingresa un valor no entero retorna error. (Codigo:400,bad request)"
					},
					"response": [
						{
							"name": "Success - Busqueda por edad",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTYyNDQ5NDk0MiwiZXhwIjoxNjI0NDk1NTQyfQ.n-gwaALlw-1iNR3GuMCVP1jx8GdYBKJJVOcpJZYlaJU",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:8080/characters?age=18",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"characters"
									],
									"query": [
										{
											"key": "age",
											"value": "18"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Jun 2021 00:36:06 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 4,\n        \"nombre\": \"Ki-Jung\",\n        \"edad\": 18,\n        \"peso\": 60,\n        \"historia\": \"Estudiante\",\n        \"imagen\": \"url\"\n    }\n]"
						},
						{
							"name": "Unsuccessful - Busqueda por edad",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTYyNDQ5NDk0MiwiZXhwIjoxNjI0NDk1NTQyfQ.n-gwaALlw-1iNR3GuMCVP1jx8GdYBKJJVOcpJZYlaJU",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:8080/characters?age=asd",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"characters"
									],
									"query": [
										{
											"key": "age",
											"value": "asd"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Jun 2021 00:36:48 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2021-06-24T00:36:48.313+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"trace\": \"org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: \\\"asd\\\"\\r\\n\\tat org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)\\r\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)\\r\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:170)\\r\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)\\r\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)\\r\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\\r\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\r\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\r\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\\r\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\r\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\r\\n\\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\\r\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\\r\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\r\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\r\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\r\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)\\r\\n\\tat org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)\\r\\n\\tat org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)\\r\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)\\r\\n\\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat ar.com.mundo.disney.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:68)\\r\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)\\r\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\\r\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\\r\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)\\r\\n\\tat org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)\\r\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)\\r\\n\\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)\\r\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)\\r\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\r\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\r\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\r\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\r\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\r\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\r\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\r\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\\r\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\r\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\\r\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\\r\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\r\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\r\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\\r\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\\r\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\r\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\\r\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\\r\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\r\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\\r\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)\\r\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\r\\n\\tat java.base/java.lang.Thread.run(Thread.java:832)\\r\\nCaused by: java.lang.NumberFormatException: For input string: \\\"asd\\\"\\r\\n\\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:68)\\r\\n\\tat java.base/java.lang.Integer.parseInt(Integer.java:652)\\r\\n\\tat java.base/java.lang.Integer.valueOf(Integer.java:983)\\r\\n\\tat org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)\\r\\n\\tat org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)\\r\\n\\tat org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)\\r\\n\\tat org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)\\r\\n\\tat org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)\\r\\n\\tat org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)\\r\\n\\tat org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)\\r\\n\\tat org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:696)\\r\\n\\tat org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)\\r\\n\\t... 88 more\\r\\n\",\n    \"message\": \"Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: \\\"asd\\\"\",\n    \"path\": \"/characters\"\n}"
						}
					]
				},
				{
					"name": "GET Personaje por nombre",
					"request": {
						"method": "GET",
						"header": [],
						"url": null,
						"description": "Retorna el personaje buscado por el nombre, especificado como query param."
					},
					"response": [
						{
							"name": "Success - Busqueda por nombre",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTYyNDQ5NDA5OCwiZXhwIjoxNjI0NDk0Njk4fQ.2GejZ1a1iDKQC9HlOtwyyn1QyM1yZhqK3_9tvAiJnqU",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:8080/characters?name=Jackson+Curtis",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"characters"
									],
									"query": [
										{
											"key": "name",
											"value": "Jackson+Curtis"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Jun 2021 00:27:13 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"nombre\": \"Jackson Curtis\",\n    \"edad\": 45,\n    \"peso\": 85,\n    \"historia\": \"Cientifico\",\n    \"imagen\": \"url\"\n}"
						}
					]
				},
				{
					"name": "GET Personaje por id",
					"request": {
						"method": "GET",
						"header": [],
						"url": null,
						"description": "Retorna el personaje con el valor del id especificado en el path."
					},
					"response": [
						{
							"name": "Success - Busqueda por id",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTYyNDQ5NDA5OCwiZXhwIjoxNjI0NDk0Njk4fQ.2GejZ1a1iDKQC9HlOtwyyn1QyM1yZhqK3_9tvAiJnqU",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:8080/characters/1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"characters",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Jun 2021 00:23:31 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"nombre\": \"Jackson Curtis\",\n    \"edad\": 45,\n    \"peso\": 85,\n    \"historia\": \"Cientifico\",\n    \"imagen\": \"url\",\n    \"peliculas\": [\n        {\n            \"id\": 1,\n            \"titulo\": \"2012\",\n            \"fechaCreacion\": \"2009-12-03\",\n            \"calificacion\": 2,\n            \"imagen\": \"url\",\n            \"personajes\": [\n                1,\n                {\n                    \"id\": 2,\n                    \"nombre\": \"Kate Curtis\",\n                    \"edad\": 45,\n                    \"peso\": 70,\n                    \"historia\": \"Profesora\",\n                    \"imagen\": \"url\",\n                    \"peliculas\": [\n                        1\n                    ]\n                }\n            ],\n            \"genero\": {\n                \"id\": 1,\n                \"nombre\": \"Accion\",\n                \"imagen\": \"url\"\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "GET Personajes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/characters",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"characters"
							]
						},
						"description": "Retorna todos los personajes con un response personalizado.\nSi no contiene el token de autenticaci√≥n en cada request recibe un error (code:401)."
					},
					"response": [
						{
							"name": "Success - Lista - Con Auth",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTYyNDQ5NDA5OCwiZXhwIjoxNjI0NDk0Njk4fQ.2GejZ1a1iDKQC9HlOtwyyn1QyM1yZhqK3_9tvAiJnqU",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:8080/characters",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"characters"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Jun 2021 00:21:47 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"nombre\": \"Jackson Curtis\",\n        \"imagen\": \"url\"\n    },\n    {\n        \"nombre\": \"Kate Curtis\",\n        \"imagen\": \"url\"\n    },\n    {\n        \"nombre\": \"Kim Ki-taek\",\n        \"imagen\": \"url\"\n    },\n    {\n        \"nombre\": \"Ki-Jung\",\n        \"imagen\": \"url\"\n    }\n]"
						},
						{
							"name": "Unsuccessful - Lista - Sin Auth",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTYyNDQ5NDA5OCwiZXhwIjoxNjI0NDk0Njk4fQ.2GejZ1a1iDKQC9HlOtwyyn1QyM1yZhqK3_9tvAiJnqU",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "localhost:8080/characters",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"characters"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Jun 2021 00:22:31 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2021-06-24T00:22:31.154+00:00\",\n    \"status\": 401,\n    \"error\": \"Unauthorized\",\n    \"message\": \"Missing or bad authentication\",\n    \"path\": \"/characters\"\n}"
						}
					]
				}
			],
			"description": "Todas las rutas disponibles relacionadas con los personajes."
		},
		{
			"name": "Path: \"/auth\"",
			"item": [
				{
					"name": "POST - Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"method\": \"POST\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/auth/login",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Como response se solicita las credenciales de identificacion, username & password.\nSi el ingreso es exitoso se retorna el token de autentificaci√≥n para cada request.\nSi las credenciales son invalidas, retorna el codigo de error: 400"
					},
					"response": [
						{
							"name": "Success - Login",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"admin\",\r\n    \"password\":\"123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/auth/login",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "text/plain;charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "131"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Jun 2021 19:30:41 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTYyNDU2MzA0MSwiZXhwIjoxNjI0NTY2NjQxfQ.Ml3lG_Hg_6WCUt65YdA4mhbaJjrhIRVMGWWi8QRCNcA"
						},
						{
							"name": "Unsuccessful - Login",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"admin\",\r\n    \"password\":\"1234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/auth/login",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "Credenciales invalidas"
						}
					]
				},
				{
					"name": "POST - Registro",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"method\":\"POST\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/auth/register",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": [
						{
							"name": "Success - Registro",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"matias\",\r\n    \"password\":\"matias1234\",\r\n    \"email\":\"matias@example.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/auth/register",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"register"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "Registro exitoso"
						},
						{
							"name": "Unsuccessful - Registro",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"jose\",\r\n    \"password\":\"jose1234\",\r\n    \"email\":\"jose@example.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/auth/register",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"register"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "Usuario ya existente"
						}
					]
				}
			],
			"description": "Requests para el registro y login.",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Path: \"/movies\"",
			"item": [
				{
					"name": "GET Peliculas",
					"request": {
						"method": "GET",
						"header": [],
						"url": null
					},
					"response": [
						{
							"name": "Success - Listado de peliculas",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/movies",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"movies"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Jun 2021 20:19:34 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"imagen\": \"url\",\n        \"titulo\": \"2012\",\n        \"fechaCreacion\": \"2009-12-03\"\n    },\n    {\n        \"imagen\": \"url\",\n        \"titulo\": \"Parasite\",\n        \"fechaCreacion\": \"2019-05-30\"\n    }\n]"
						}
					]
				},
				{
					"name": "GET Pelicula por id",
					"request": {
						"method": "GET",
						"header": [],
						"url": null
					},
					"response": [
						{
							"name": "Success - Pelicula por id",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/movies/2",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"movies",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Jun 2021 20:20:51 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"titulo\": \"Parasite\",\n    \"fechaCreacion\": \"2019-05-30\",\n    \"calificacion\": 5,\n    \"imagen\": \"url\",\n    \"personajes\": [\n        {\n            \"id\": 3,\n            \"nombre\": \"Kim Ki-taek\",\n            \"edad\": 50,\n            \"peso\": 80,\n            \"historia\": \"Desempleado\",\n            \"imagen\": \"url\",\n            \"peliculas\": [\n                2\n            ]\n        },\n        {\n            \"id\": 4,\n            \"nombre\": \"Ki-Jung\",\n            \"edad\": 18,\n            \"peso\": 60,\n            \"historia\": \"Estudiante\",\n            \"imagen\": \"url\",\n            \"peliculas\": [\n                2\n            ]\n        }\n    ],\n    \"genero\": {\n        \"id\": 3,\n        \"nombre\": \"Drama\",\n        \"imagen\": \"url\"\n    }\n}"
						}
					]
				},
				{
					"name": "GET Pelicula por nombre",
					"request": {
						"method": "GET",
						"header": [],
						"url": null
					},
					"response": [
						{
							"name": "Success - Pelicula por nombre",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/movies?name=2012",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"movies"
									],
									"query": [
										{
											"key": "name",
											"value": "2012"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Jun 2021 20:22:13 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"titulo\": \"2012\",\n    \"fechaCreacion\": \"2009-12-03\",\n    \"calificacion\": 2,\n    \"imagen\": \"url\",\n    \"genero\": \"Accion\"\n}"
						}
					]
				},
				{
					"name": "GET Peliculas por genero",
					"request": {
						"method": "GET",
						"header": [],
						"url": null
					},
					"response": [
						{
							"name": "Success - Peliculas por genero",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/movies?genre=3",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"movies"
									],
									"query": [
										{
											"key": "genre",
											"value": "3"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Jun 2021 20:23:00 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 2,\n        \"titulo\": \"Parasite\",\n        \"fechaCreacion\": \"2019-05-30\",\n        \"calificacion\": 5,\n        \"imagen\": \"url\",\n        \"genero\": \"Drama\"\n    }\n]"
						}
					]
				},
				{
					"name": "Get Peliculas orderBy ASC/DESC",
					"request": {
						"method": "GET",
						"header": [],
						"url": null
					},
					"response": [
						{
							"name": "Success - Get Peliculas orderBy ASC",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/movies?order=ASC",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"movies"
									],
									"query": [
										{
											"key": "order",
											"value": "ASC"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Jun 2021 20:27:12 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"titulo\": \"2012\",\n        \"fechaCreacion\": \"2009-12-03\",\n        \"calificacion\": 2,\n        \"imagen\": \"url\",\n        \"genero\": \"Accion\"\n    },\n    {\n        \"id\": 2,\n        \"titulo\": \"Parasite\",\n        \"fechaCreacion\": \"2019-05-30\",\n        \"calificacion\": 5,\n        \"imagen\": \"url\",\n        \"genero\": \"Drama\"\n    }\n]"
						},
						{
							"name": "Success - Get Peliculas orderBy DESC",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/movies?order=DESC",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"movies"
									],
									"query": [
										{
											"key": "order",
											"value": "DESC"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Jun 2021 20:27:29 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 2,\n        \"titulo\": \"Parasite\",\n        \"fechaCreacion\": \"2019-05-30\",\n        \"calificacion\": 5,\n        \"imagen\": \"url\",\n        \"genero\": \"Drama\"\n    },\n    {\n        \"id\": 1,\n        \"titulo\": \"2012\",\n        \"fechaCreacion\": \"2009-12-03\",\n        \"calificacion\": 2,\n        \"imagen\": \"url\",\n        \"genero\": \"Accion\"\n    }\n]"
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTYyNDU2NTkwMiwiZXhwIjoxNjI0NTY5NTAyfQ.8dyRAP15d2YZs_Sf18e1D0Y-MDgRiPRvFercmDeCtNw",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}